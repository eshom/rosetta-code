socketSelect(lst())
socketSelect(list())
as.list(new.env())
length(as.list(new.env()))
f <- future(Sys.sleep(15))
f
f <- future(Sys.sleep(15))
result(f)
value(f)
f <- future({Sys.sleep(15)})
f
plan(sequential)
f <- future({Sys.sleep(15)})
plan(multisession)
f <- future({Sys.sleep(15)})
plan(sequential)
plan(multisession(workers = 2))
plan(sequential)
plan(multisession(workers = 1))
f <- future({Sys.sleep(15)})
plan(sequential)
users
ls(envir = users)
ls(envir = users)
Q
c
Q
future.options()
options(future.debug = TRUE)
Q
options(future.debug = FALSE)
Q
Q
ls(envir = users)
ls(envir = users)
Q
test_users()
test_users
ls(envir = test_users)
Q
Q
f
print(f)
value(f)
Q
f
print(f)
value(f)
Q
print(f)
value(f)
Q
print(f)
value(f)
print(f)
str(f)
Q
print(srv)
Q
c
with(sockets, conn[!alive])
Q
sockets[sockets$alive, ]
sockets
sockets
sockets
named_dropped
letters["dd"]
letters[FALSE]
is_valid_name(c("Hello", "Dude"))
is_valid_name(c("Hello", "Dude4"))
is_valid_name(c("Hello", "Dude7"))
is_valid_name(c("Hello", "Dude9"))
is_valid_name(c("Hello", "Dude^9"))
is_valid_name(c("HelloAz1", "Dude^9"))
nchar(c("HelloAz1", "Dude9"))
1 %in% c(NA, 1, NA)
is_valid_name(c(NA, "Hello", NA))
toLower("HellssDSD")
tolower("HeSDFS")
c
ls.str()
is_taken
ls.str()
ls.str()
NA & FALSE
NA %in% NA
Q
c
ls.str()
ls.str()
Q
